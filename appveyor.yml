environment:
  USER:
    secure: fXgF9uyy6sT0JoVOR7BoqA==

  PASS:
    secure: 0bXSOVjf9x8L7nErTivu92TF1FwNosTjFJQPmxp8Dys=

  matrix: 
    - PYTHON: "C:/Python36-x64"
      ENABLE_CONTRIB: 1
      ENABLE_HEADLESS: 1
 

matrix:
    fast_finish: true

build_script:
- cmd: |
    "%PYTHON%/python.exe" -m pip install --upgrade pip
    "%PYTHON%/python.exe" -m pip install --upgrade setuptools
    "%PYTHON%/python.exe" setup.py bdist_wheel

before_test:
- ps: |

    cd ${Env:APPVEYOR_BUILD_FOLDER}\tests
    $env:PYTHONWARNINGS = "ignore:::pip._internal.cli.base_command"
    &"${Env:PYTHON}/python.exe" -m pip install --user (ls "../dist/opencv_*.whl")
    if ($LastExitCode -ne 0) {throw $LastExitCode}

test_script:
- cmd: |

    cd %APPVEYOR_BUILD_FOLDER%\tests
    "%PYTHON%/python.exe" -m unittest test

artifacts:
- path: dist\*.whl
  name: wheels

deploy_script:
- ps: |

    if (${Env:APPVEYOR_REPO_TAG} -eq "true") {
      cd ${Env:APPVEYOR_BUILD_FOLDER}
      if (${Env:ENABLE_CONTRIB} -eq 0) {
        if (${Env:ENABLE_HEADLESS} -eq 0) {
          echo "This is a default build. Deployment will be done to PyPI entry opencv-python."
        }
        else {
          echo "This is a headless build. Deployment will be done to PyPI entry opencv-python-headless."
        }
      }
      else {
        if (${Env:ENABLE_HEADLESS} -eq 0) {
          echo "This is a contrib build. Deployment will be done to PyPI entry opencv-contrib-python."
        }
        else {
          echo "This is a headless contrib build. Deployment will be done to PyPI entry opencv-contrib-python-headless."
        }
      }

      &"${Env:PYTHON}/python.exe" -m pip install twine
      &"${Env:PYTHON}/python.exe" -m twine upload -u ${Env:USER} -p ${Env:PASS} --skip-existing dist/opencv*
    }
    else {
      echo "Tag not set, deployment skipped."
    }
